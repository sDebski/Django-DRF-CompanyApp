services:
  django:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: image_django
    expose: 
      - "8000"
    volumes: 
      - .:/app
      - static_volume:/app/static
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:8000/core/health/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      psql_db:
        condition: service_healthy
  
  psql_db:
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: image_nginx
    ports:
      - "8004:8000"
    depends_on:
      - django
    volumes:
      - static_volume:/app/static

  redis:
    image: redis
    expose:
      - 6379
    logging:
      options:
        max-size: "1g"
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: image_base
    command: celery -A company_app worker -l info
    logging:
      options:
        max-size: "1g"
    restart: unless-stopped

  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: image_base
    command: celery -A company_app beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    logging:
      options:
        max-size: "1g"
    restart: unless-stopped
    depends_on:
      celery:
        condition: service_started

volumes:
  db-data:
  static_volume: